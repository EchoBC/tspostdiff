# -*- coding: utf-8 -*-
"""randucb.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tWlLs8LBwj-yCr0scuDGF0wBJBceW_yB
"""

import numpy as np
import matplotlib
import pandas
import math
import random

def RandUCB(pa, pb, n, U, epsilon, sig, M):
  pm = np.r_[1:M]
  pm[M] = epsilon
  
  cm = np.r_[0:(M-1)]/(M-1)*U
  pm[1:(M-1)] = math.exp(-cm[1:(M-1)]^2/2/sig^2)
  pm[1:(M-1)] = pm[1:(M-1)]/sum(pm[1:(M-1)])*(1-epsilon)
  
  # n is the sample size (785 or 197 in our case)
  narm = 2
  arm_a_successes = np.r_[0]
  arm_b_successes = np.r_[0,0]
  
  if (random.random()<pa):
    arm_a_successes = np.r_[1]
  
  if (random.random()<pb):
    arm_b_successes[2] = 1
  
  arm_a_successes[2] = arm_a_successes[1]
  
  na = np.r_[1,1]
  nb = np.r_[0,1]

  for i in range(narm+1, n+1):
    ae = arm_a_successes[i-1]/na[i-1]
    be = arm_b_successes[i-1]/nb[i-1]
    c = sum(random.multinomial(n=1, size=1, pvals = pm)*cm)
    if ((ae+c*math.sqrt(i/na[i-1])) > (be+c*math.sqrt(i/nb[i-1]))):
      na[i] = na[i-1]+1
      nb[i] = nb[i-1]
      arm_a_successes[i] = arm_a_successes[i-1]
      arm_b_successes[i] = arm_b_successes[i-1]
      if(random.random()<pa):
        arm_a_successes[i] = arm_a_successes[i-1]+1
      
    else:
      nb[i] = nb[i-1]+1
      na[i] = na[i-1]
      arm_a_successes[i] = arm_a_successes[i-1]
      arm_b_successes[i] = arm_b_successes[i-1]
      if(random.random()<pb):
        arm_b_successes[i] = arm_b_successes[i-1]+1
  
  #na: number of times arm A was pulled. nb: same 
  
  pa_est = arm_a_successes/na
  pb_est = arm_b_successes/nb
  WaldScore = (pa_est-pb_est)/math.sqrt(pa_est*(1-pa_est)/na + pb_est*(1-pb_est)/nb)
  #return(np.r_[WaldScore,arm_a_successes,na,arm_b_successes,nb,count_PC))
  return(list(WaldScore=WaldScore,na=na,nb=nb,sa=arm_a_successes,sb=arm_b_successes))

